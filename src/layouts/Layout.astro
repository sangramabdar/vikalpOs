---
import "../styles/global.css";
import Footer from "../components/common/Footer.astro";
import Navbar from "../components/common/Navbar.astro";

export interface Props {
  title?: string;
  metaProps?: {
    ogTitle?: string;
    ogDescription?: string;
    ogKeywords?: string;
    ogUrl?: string;
  };
}

const { title = "", metaProps } = Astro.props;
const { ogTitle, ogDescription, ogKeywords, ogUrl } = metaProps || {};
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link
      rel="icon"
      href="https://res.cloudinary.com/senpiper/image/upload/v1755841432/senpiper_assets/VikalpOS/icons/VikalpOS_Logo_ox9dyo.svg"
      class="text-background-primary"
    />

    <!-- og data -->
    <meta
      property="og:title"
      content={ogTitle || "Build e-Governance Solutions Free from Lock-In"}
    />
    <meta
      property="og:description"
      content={ogDescription ||
        "VikalpOS is an open-source, low-code platform for digitizing government services with workflows, forms, dashboards, and multilingual support scalable, secure, and free from vendor lock-in."}
    />
    <meta
      property="og:keywords"
      content={ogKeywords ||
        "e-governance platform, digital governance, low-code solutions, open-source software, workflow automation, citizen services, public sector digitization, government technology, secure data, role-based access, multilingual support, offline access, dashboard analytics, system integration, compliance management, process automation, service delivery, digital transformation, governance apps"}
    />
    <meta property="og:url" content={ogUrl || "https://vikalpos.in/"} />
    <meta property="og:type" content="website" />
    <meta
      property="og:image"
      content="https://res.cloudinary.com/senpiper/image/upload/v1684936087/senpiper_assets/new_website_assets/1_baehgn.jpg"
    />
    <meta
      property="og:image:url"
      content="https://res.cloudinary.com/senpiper/image/upload/v1756104690/senpiper_assets/VikalpOS/icons/VikalpOS_Logo_ox9dyo_m9pa2j.jpg"
    />
    <meta
      property="og:image:secure_url"
      content="https://res.cloudinary.com/senpiper/image/upload/v1756104690/senpiper_assets/VikalpOS/icons/VikalpOS_Logo_ox9dyo_m9pa2j.jpg"
    />


    <link
      href="https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@400;600;700&display=swap"
      rel="stylesheet"
    />

    <style>
      html {
        overflow-x: hidden;
      }
    </style>
  </head>
  <body
    class="bg-background-primary p-0 overflow-x-hidden max-w-screen font-sans flex flex-col"
  >
    <Navbar />

    <main class="mt-10 md:mt-14 flex flex-col gap-16 lg:gap-20 flex-1">
      <slot />
    </main>
    <Footer />
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
</style>

<script>
  const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add("show");
      } else {
        entry.target.classList.remove("show");
      }
    });
  });

  const slideRightElements = document.getElementsByClassName("slideInRight");
  const slideRightSubElements =
    document.getElementsByClassName("slideInRightSub");
  const slideLeftElements = document.getElementsByClassName("slideInLeft");
  const slideLeftSubElements =
    document.getElementsByClassName("slideInLeftSub");
  const slideUpElements = document.getElementsByClassName("slideInUp");
  const slideUpSubElements = document.getElementsByClassName("slideInUpSub");
  const slideInDownElements = document.getElementsByClassName("slideInDown");
  const slideInDownSubElements =
    document.getElementsByClassName("slideInDownSub");
  const imagePops = document.getElementsByClassName("imgPop");
  const textScales = document.getElementsByClassName("textScale");
  const moveLeftElements = document.getElementsByClassName("moveInLeft");

  const elementsToObserve = [
    slideRightElements,
    slideLeftElements,
    imagePops,
    slideUpElements,
    slideUpSubElements,
    slideRightSubElements,
    slideLeftSubElements,
    slideInDownElements,
    slideInDownSubElements,
    textScales,
    moveLeftElements,
  ];

  elementsToObserve.forEach(elements => {
    for (let i = 0; i < elements.length; i++) {
      observer.observe(elements[i]);
    }
  });
</script>
