---
import Button from "../components/common/Button.astro";
import Input from "../components/common/Input.astro";
import SectionContainer from "../components/common/section/SectionContainer.astro";
import HeroSection from "../components/HeroSection.astro";
import Layout from "../layouts/Layout.astro";
import Wrapper from "../layouts/Wrapper.astro";
import { cn } from "../utils/cn";

const metaData = {
  ogTitle:
    "Contact Senpiper | Request a Demo, Sales Inquiries, and Support Requests",
  ogDescription:
    "Contact Senpiper for a product demo, sales inquiries, or support requests. Our team will assist you in identifying digitization opportunities to improve your business operations. Fill out the form and click 'Get a Demo' to schedule a date and time with our experts. Experience our platform and discover how we can build the right solution for your needs",
  ogKeywords:
    "Contact Senpiper, Request a Demo, Sales Inquiries, Support Requests, Digitization Opportunities, Schedule a Demo, Expert Consultation, Business Solutions",
  ogUrl: "https://senpiper.com/contact/",
};

const heroSectionData = {
  headers: ["Get in Touch", "With Our Team Experts"],
  description: `Have questions, need a demo, or wish to discuss how VikalpOS can transform your department? 
Our team is here to help you accelerate digital governance and deliver better outcomes`,
};

const formSectionData = {
  headers: ["What to Expect", "When You Reach Out"],
  options: [
    "Fill out the form and click “Request a Demo",
    "Our team will quickly review your request and reach out to you",
    "We’ll organize a demo tailored to your department’s needs",
  ],
};
---

<Layout title="Contact Us" metaProps={metaData}>
  <HeroSection
    headers={heroSectionData.headers}
    description={heroSectionData.description}
    hideButton
  >
    <div class="h-fit slideInLeft">
      <img
        src="https://res.cloudinary.com/senpiper/image/upload/v1754643545/senpiper_assets/VikalpOS/contact-us/Rectangle_10_nu6xdu.png"
        alt="#"
        class="w-fit"
      />
    </div>
  </HeroSection>

  <SectionContainer>
    <Wrapper>
      <div class={`grid grid-cols-1 lg:grid-cols-2 gap-16 md:gap-12`}>
        <div class="w-full space-y-3 lg:space-y-4 hidden" id="successMessage">
          <div class="flex gap-2 items-center text-center lg:gap-5">
            <img
              src="https://res.cloudinary.com/senpiper/image/upload/v1754654265/senpiper_assets/VikalpOS/icons/Check_Icon_qojudl_bxjbon.svg"
              alt="successIcon"
            />
            <p class="text-typography-80 font-semibold">You're all set!</p>
          </div>
          <!-- <p class="text-mbd2 md:text-tbd2 lg:text-bd2 text-blue-grey-70">
            We'll get back to you with a demo shortly. For now, visit our <a
              href="https://docs.senpiper.com/"
              class="text-[#54a9ff] underline">Product Documentation</a
            > to learn more.
          </p> -->
        </div>
        <form id="contact-us-form" class="flex flex-col gap-6 slideInUp">
          <Input
            title="Name"
            name="name"
            type="text"
            placeholder="for eg John Doe"
            required
          />
          <Input
            title="Email"
            name="email"
            type="email"
            placeholder="for eg John Doe@gmail.com"
            required
          />
          <Input title="Organization Name" name="organizationName" required />
          <Input title="Message" name="message" id="message" textArea />
          <div class="flex justify-center">
            <Button type="submit" text="Requst a demo" id="submitButton" />
          </div>
        </form>
        <div class="flex flex-col justify-center slideInDown gap-3 md:gap-4">
          <h3
            class="text-typography-80 font-bold text-left text-xl md:text-3xl slideInDownSub"
          >
            {
              formSectionData.headers.map((header, index) => (
                <span
                  class={index == 0 ? "text-typography-80" : "text-primary-70"}
                >
                  {header}
                </span>
              ))
            }
          </h3>
          <ul class="space-y-2 text-left self-start md:text-xl">
            {
              formSectionData.options.map((value, index) => (
                <li class={cn("flex gap-2 slideInDownSub transition-all")}>
                  <img src="https://res.cloudinary.com/senpiper/image/upload/v1753788029/senpiper_assets/VikalpOS/icons/check_circle_en544w.svg" />
                  <span class="text-typography-80 text-base">{value}</span>
                </li>
              ))
            }
          </ul>
        </div>
      </div>
    </Wrapper>
  </SectionContainer>
</Layout>

<script>
  import { getUUID } from "../utils/helperFunctions";

  const formData: any = {};

  const form = document.getElementById("contact-us-form") as HTMLFormElement;

  const submitButton = document.getElementById(
    "submitButton"
  ) as HTMLButtonElement;

  const inputFields = document
    .getElementById("contact-us-form")
    ?.getElementsByTagName("input") as any;

  const textAreaFields = document
    .getElementById("contact-us-form")
    ?.getElementsByTagName("textarea") as any;

  function buidData(formData: any) {
    const jsonFormData = { ...formData };

    let groupId = "23195170-209a-447f-af76-e924df1475cc";
    let formId = "483100ea-7bb5-43e9-ae9c-7d438a1e18c7";

    const answer = {
      answer: {
        n: jsonFormData["name"],
        e: jsonFormData["email"],
        o: jsonFormData["organizationName"],
        m: jsonFormData["message"],
      },
      groupId: groupId,
      formId: formId,
      hash: getUUID(),
      referer: "WEB",
    };
    return answer;
  }

  async function postForm(formData: any) {
    try {
      let url = "https://tech.senpiper.com/api/core/form/answer/public";
      await fetch(url, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
      });

      return true;
    } catch (err) {
      console.error(`Error on POST: ${err}`);
      return null;
    }
  }

  async function submitFormToBackend(e: Event) {
    e.preventDefault();
    const successMessage = document.getElementById(
      "successMessage"
    ) as HTMLElement;
    submitButton.disabled = true;
    submitButton.innerHTML = "Sending request";

    const jsonFormData = buidData(formData);

    const response = await postForm(jsonFormData);

    setTimeout(() => {
      if (response) {
        submitButton.innerHTML = "Request Submitted";
        submitButton.classList.remove("bg-light-violet");
        submitButton.classList.add("bg-green");
        form.classList.add("hidden");
        successMessage.classList.remove("hidden");
      } else {
        submitButton.innerHTML = "Request failed, please try again";
        submitButton.classList.remove("bg-light-violet");
        submitButton.classList.add("bg-[#FD464E]");
        setTimeout(() => {
          2;
          submitButton.disabled = false;
          submitButton.innerHTML = "Get a demo";
          submitButton.classList.add("bg-light-violet");
          submitButton.classList.remove("bg-[#FD464E]");
        }, 4000);
      }
    }, 2000);
  }

  const handleOnSubmit = (event: Event) => {
    event.preventDefault();
    submitFormToBackend(event);
  };

  form?.addEventListener("submit", handleOnSubmit);

  const handleOnChange = (key: string) => (event: any) => {
    const value = event.target?.value;
    formData[key] = value;
  };

  for (let i = 0; i < textAreaFields?.length; i++) {
    const key = textAreaFields[i]?.name;

    textAreaFields[i].addEventListener("input", handleOnChange(key));
  }

  for (let i = 0; i < inputFields?.length; i++) {
    const key = inputFields[i]?.name;

    inputFields[i].addEventListener("input", handleOnChange(key));
  }
</script>
