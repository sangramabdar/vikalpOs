---
// props: Array of case study cards
const { images = [] } = Astro.props;
---

<div class="relative w-full overflow-hidden max-w-xl mx-auto mt-40 p-4">
  <div
    id="carousel-track"
    class="flex transition-transform duration-500 ease-in-out overflow-hidden"
  >
    {
      images.map(item => (
        <div class="min-w-full md:min-w-[33.3333%] p-4 box-border">
          <div class="border rounded-xl shadow-sm bg-white p-6 h-full flex flex-col items-center text-center">
            <img
              src={item.src}
              alt={item.alt}
              class="h-12 mb-4 object-contain"
            />
            <p class="text-sm text-gray-700 mb-4">{item.description}</p>
            <a
              href={item.link}
              class="text-blue-600 font-medium border border-blue-600 rounded px-4 py-2 hover:bg-blue-50 transition"
            >
              View Case Study
            </a>
          </div>
        </div>
      ))
    }
  </div>

  <!-- Navigation -->
  <button
    id="carousel-prev"
    class="absolute left-2 top-1/2 transform -translate-y-1/2 bg-white p-2 shadow rounded-full"
  >
    ‹
  </button>
  <button
    id="carousel-next"
    class="absolute right-2 top-1/2 transform -translate-y-1/2 bg-white p-2 shadow rounded-full"
  >
    ›
  </button>
</div>

<script>
  const track = document.getElementById("carousel-track");
  const prevBtn = document.getElementById("carousel-prev");
  const nextBtn = document.getElementById("carousel-next");

  let index = 0;
  const slides = track.children;
  const total = slides.length;

  const moveSlide = dir => {
    index = (index + dir + total) % total;
    const slideWidth = slides[0].offsetWidth;
    console.log("Sangram", { index });
    // slides[index].scrollIntoView({
    //   behavior: "smooth",
    // });
    track.style.transform = `translateX(-${index * slideWidth}px)`;
  };

  prevBtn.addEventListener("click", () => moveSlide(-1));
  nextBtn.addEventListener("click", () => moveSlide(1));
</script>
